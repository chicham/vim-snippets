# Snippets for Go

priority -50

# when to abbriviate and when not?
# b doesn't work here, because it ignores whitespace
# optional local name?
snippet /^import/ "Import declaration" r
import (
	"${1:package}"
)

snippet /^package/ "Package declaration" r
// Package $1 provides ...
package ${1:main}

# Mostly converted from: https://github.com/AlanQuatermain/go-tmbundle
snippet /^cons/ "Constants declaration" r
const (
	${1:constant}${2/(.+)/ /}${2:type} = ${0:value}
)

snippet /^con/ "Constant declaration" r
const ${1:name}${2/(.+)/ /}${2:type} = ${0:value}

snippet iota "Iota constant generator" b
const (
	${1:constant}${2/(.+)/ /}${2:type} = iota
)

snippet struct "Struct declaration" b
type ${1:Struct} struct {
	${0:$TM_SELECTED_TEXT}
}

snippet interface "Interface declaration" b
type ${1:Interface} interface {
	${0:$TM_SELECTED_TEXT}
}

snippet if "If statement" b
if ${1:condition}${1/(.+)/ /}{
	${0:$TM_SELECTED_TEXT}
}

snippet switch "Switch statement" b
switch ${1:expression}${1/(.+)/ /}{
case$0
}

# functions
snippet /^main/ "Main function" r
func main() {
	${0:$TM_SELECTED_TEXT}
}

snippet /^meth/ "Method" r
func (${1:receiver} ${2:type}) ${3:name}(${4:params})${5/(.+)/ /}${5:type} {
	${0:$TM_SELECTED_TEXT}
}

snippet func "Function" b
func ${1:name}(${2:params})${3/(.+)/ /}${3:type} {
	${0:$TM_SELECTED_TEXT}
}

snippet funch "HTTP handler" b
func ${1:handler}(${2:w} http.ResponseWriter, ${3:r} *http.Request) {
	${0:$TM_SELECTED_TEXT}
}

# types and variables
snippet map "Map type" b
map[${1:keytype}]${2:valtype}

snippet : "Variable declaration :=" b
${1:name} := ${0:value}

snippet var "Variable declaration" b
var ${1:name}${2/(.+)/ /}${2:type}${3: = ${0:value}}

snippet vars "Variables declaration" b
var (
	${1:name}${2/(.+)/ /}${2:type}${3: = ${0:value} }
)

snippet json "JSON field"
\`json:"${1:displayName}"\`

# vim:ft=snippets:

# error handling
snippet err "Basic error handling" b
if err != nil {
	log.${1:Fatal}(err)
}
